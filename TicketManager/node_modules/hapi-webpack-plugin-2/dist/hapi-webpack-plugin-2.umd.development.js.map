{"version":3,"file":"hapi-webpack-plugin-2.umd.development.js","sources":["../src/index.ts"],"sourcesContent":["import path from 'path';\nimport webpack from 'webpack';\nimport webpackDevMiddleware from 'webpack-dev-middleware';\nimport webpackHotMiddleware from 'webpack-hot-middleware';\nimport { Server, Plugin } from '@hapi/hapi';\nimport { NextHandleFunction } from 'connect';\n\ntype Config = {\n  compiler: webpack.ICompiler;\n  assets?: webpackDevMiddleware.Options;\n  hot?: webpackHotMiddleware.Options;\n};\n\ntype Options = {\n  config?: Config;\n  configPath?: string;\n};\n\ntype DevMiddleware = webpackDevMiddleware.WebpackDevMiddleware & NextHandleFunction;\ntype HotMiddleware = webpackHotMiddleware.EventStream & NextHandleFunction;\n\nconst createExtension = (server: Server, middleware: DevMiddleware | HotMiddleware) => {\n  server.ext({\n    type: 'onRequest',\n    method: (request, h) =>\n      new Promise((resolve, reject) => {\n        const { req, res } = request.raw;\n\n        middleware(req, res, err => {\n          return err ? reject(err) : resolve(h.continue);\n        });\n      }),\n  });\n};\n\nconst getConfig = (options: Options): Config => {\n  if (options.configPath) {\n    const config = require(path.resolve(process.cwd(), options.configPath));\n\n    return {\n      compiler: webpack(config),\n      assets: config.assets,\n      hot: config.hot,\n    };\n  } else if (options.config) {\n    return options.config;\n  } else {\n    throw new Error('No config or configPath provided.');\n  }\n};\n\nfunction register(server: Server, options: Options) {\n  const { compiler, assets, hot } = getConfig(options);\n\n  createExtension(server, webpackDevMiddleware(compiler, assets));\n  createExtension(server, webpackHotMiddleware(compiler, hot));\n\n  server.expose({ compiler });\n}\n\nconst HapiWebpackPlugin: Plugin<Options> = {\n  name: 'hapi-webpack-plugin-2',\n  version: '1.0.2',\n  once: true,\n  register,\n};\n\nexport default HapiWebpackPlugin;\n"],"names":["createExtension","server","middleware","ext","type","method","request","h","Promise","resolve","reject","raw","req","res","err","getConfig","options","configPath","config","require","path","process","cwd","compiler","webpack","assets","hot","Error","register","webpackDevMiddleware","webpackHotMiddleware","expose","HapiWebpackPlugin","name","version","once"],"mappings":";;;;;;;;;;;EAqBA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAAiBC,UAAjB;EACtBD,EAAAA,MAAM,CAACE,GAAP,CAAW;EACTC,IAAAA,IAAI,EAAE,WADG;EAETC,IAAAA,MAAM,EAAE,gBAACC,OAAD,EAAUC,CAAV;EAAA,aACN,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;6BACWJ,OAAO,CAACK;cAArBC,mBAAAA;cAAKC,mBAAAA;EAEbX,QAAAA,UAAU,CAACU,GAAD,EAAMC,GAAN,EAAW,UAAAC,GAAG;EACtB,iBAAOA,GAAG,GAAGJ,MAAM,CAACI,GAAD,CAAT,GAAiBL,OAAO,CAACF,CAAC,YAAF,CAAlC;EACD,SAFS,CAAV;EAGD,OAND,CADM;EAAA;EAFC,GAAX;EAWD,CAZD;;EAcA,IAAMQ,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD;EAChB,MAAIA,OAAO,CAACC,UAAZ,EAAwB;EACtB,QAAMC,MAAM,GAAGC,OAAO,CAACC,IAAI,CAACX,OAAL,CAAaY,OAAO,CAACC,GAAR,EAAb,EAA4BN,OAAO,CAACC,UAApC,CAAD,CAAtB;;EAEA,WAAO;EACLM,MAAAA,QAAQ,EAAEC,OAAO,CAACN,MAAD,CADZ;EAELO,MAAAA,MAAM,EAAEP,MAAM,CAACO,MAFV;EAGLC,MAAAA,GAAG,EAAER,MAAM,CAACQ;EAHP,KAAP;EAKD,GARD,MAQO,IAAIV,OAAO,CAACE,MAAZ,EAAoB;EACzB,WAAOF,OAAO,CAACE,MAAf;EACD,GAFM,MAEA;EACL,UAAM,IAAIS,KAAJ,CAAU,mCAAV,CAAN;EACD;EACF,CAdD;;EAgBA,SAASC,QAAT,CAAkB3B,MAAlB,EAAkCe,OAAlC;qBACoCD,SAAS,CAACC,OAAD;QAAnCO,sBAAAA;QAAUE,oBAAAA;QAAQC,iBAAAA;;EAE1B1B,EAAAA,eAAe,CAACC,MAAD,EAAS4B,oBAAoB,CAACN,QAAD,EAAWE,MAAX,CAA7B,CAAf;EACAzB,EAAAA,eAAe,CAACC,MAAD,EAAS6B,oBAAoB,CAACP,QAAD,EAAWG,GAAX,CAA7B,CAAf;EAEAzB,EAAAA,MAAM,CAAC8B,MAAP,CAAc;EAAER,IAAAA,QAAQ,EAARA;EAAF,GAAd;EACD;;EAED,IAAMS,iBAAiB,GAAoB;EACzCC,EAAAA,IAAI,EAAE,uBADmC;EAEzCC,EAAAA,OAAO,EAAE,OAFgC;EAGzCC,EAAAA,IAAI,EAAE,IAHmC;EAIzCP,EAAAA,QAAQ,EAARA;EAJyC,CAA3C;;;;;;;;"}